{"ast":null,"code":"/*\n\tthe purpose of this module will be to: \n\tTODO - handle the character creation process\n*/\n'use strict';\n\nclass Stats {\n  constructor(obj) {\n    this.health = obj.health;\n    this.damage = obj.damage;\n    this.speed = obj.speed; // this.strength = obj.strength; this.agility = obj.agility; this.stamina = obj.stamina;\n    // this.intellect = obj.intellect; this.spirit = obj.spirit; this.armor = obj.armor; \n    // this.defense = obj.defense; this.dodge = obj.dodge; this.parry = obj.parry; \n    // this.block = obj.block; this.resilience = obj.resilience; this.bonus_damage = bonus_damage;\n    // this.bonus_health = bonus_health; this.hit_rating = hit_rating; this.crit_chance = obj.crit_chance;\n    // this.haste_rating = obj.haste_rating; this.mana_regen = obj.mana_regen; this.power = obj.power;\n  }\n\n}\n\nclass Character extends Stats {\n  constructor(obj) {\n    super(obj);\n    this.name = obj.name;\n  }\n\n}\n\nlet duel = function (char1, char2) {\n  // let timer = setInterval(,);\n  let char1att = setInterval(function () {\n    console.log(`${char1.name} *attacks*: ${char2.name} has ${char2.health} left!`);\n    char2.health -= char1.damage;\n\n    if (char2.health <= 0) {\n      clearInterval(char1att);\n      clearInterval(char2att);\n      console.log(`** ${char2.name} died **`);\n    }\n  }, char1.speed * 1000);\n  let char2att = setInterval(function () {\n    console.log(`${char2.name} *attacks*: ${char1.name} has ${char1.health} left!`);\n    char1.health -= char2.damage;\n\n    if (char1.health <= 0) {\n      clearInterval(char1att);\n      clearInterval(char2att);\n      console.log(`** ${char1.name} died **`);\n    }\n  }, char2.speed * 1000);\n};\n\nmodule.exports = {\n  Character,\n  duel\n};\n/*\n\tlet stats = {\n\t\tthis.strength:obj.strength\n\t\t,this.agility:obj.agility, this.stamina:obj.stamina\n\t\t,this.intellect:obj.intellect, this.spirit:obj.spirit, this.armor:obj.armor\n\t\t,this.defense:obj.defense, this.dodge:obj.dodge, this.parry:obj.parry\n\t\t,this.block:obj.block, this.resilience:obj.resilience, this.bonus_damage:obj.bonus_damage\n\t\t,this.bonus_health:obj.bonus_health, this.hit_rating:obj.hit_rating, this.crit_chance:obj.crit_chance\n\t\t,this.haste_rating:obj.haste_rating, this.mana_regen:obj.mana_regen, this.power:obj.power\n\t}\n*/","map":{"version":3,"sources":["/Users/R666050/Desktop/Workspace/Application1/src/utilities/objCharacter.js"],"names":["Stats","constructor","obj","health","damage","speed","Character","name","duel","char1","char2","char1att","setInterval","console","log","clearInterval","char2att","module","exports"],"mappings":"AAAA;;;;AAKA;;AAGA,MAAMA,KAAN,CAAY;AACXC,EAAAA,WAAW,CAACC,GAAD,EAAK;AACf,SAAKC,MAAL,GAAcD,GAAG,CAACC,MAAlB;AACA,SAAKC,MAAL,GAAcF,GAAG,CAACE,MAAlB;AAA0B,SAAKC,KAAL,GAAaH,GAAG,CAACG,KAAjB,CAFX,CAGf;AACA;AACA;AACA;AACA;AACA;AAEA;;AAXU;;AAaZ,MAAMC,SAAN,SAAwBN,KAAxB,CAA8B;AAC7BC,EAAAA,WAAW,CAACC,GAAD,EAAK;AACf,UAAMA,GAAN;AACA,SAAKK,IAAL,GAAYL,GAAG,CAACK,IAAhB;AACA;;AAJ4B;;AAO9B,IAAIC,IAAI,GAAG,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AACjC;AACA,MAAIC,QAAQ,GAAGC,WAAW,CACzB,YAAU;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEL,KAAK,CAACF,IAAK,eAAcG,KAAK,CAACH,IAAK,QAAOG,KAAK,CAACP,MAAO,QAAvE;AACAO,IAAAA,KAAK,CAACP,MAAN,IAAgBM,KAAK,CAACL,MAAtB;;AACA,QAAGM,KAAK,CAACP,MAAN,IAAgB,CAAnB,EAAqB;AAACY,MAAAA,aAAa,CAACJ,QAAD,CAAb;AAAwBI,MAAAA,aAAa,CAACC,QAAD,CAAb;AAAyBH,MAAAA,OAAO,CAACC,GAAR,CAAa,MAAKJ,KAAK,CAACH,IAAK,UAA7B;AAAyC;AACjH,GALyB,EAKtBE,KAAK,CAACJ,KAAN,GAAY,IALU,CAA1B;AAMA,MAAIW,QAAQ,GAAGJ,WAAW,CACzB,YAAU;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEJ,KAAK,CAACH,IAAK,eAAcE,KAAK,CAACF,IAAK,QAAOE,KAAK,CAACN,MAAO,QAAvE;AACAM,IAAAA,KAAK,CAACN,MAAN,IAAgBO,KAAK,CAACN,MAAtB;;AACA,QAAGK,KAAK,CAACN,MAAN,IAAgB,CAAnB,EAAqB;AAACY,MAAAA,aAAa,CAACJ,QAAD,CAAb;AAAyBI,MAAAA,aAAa,CAACC,QAAD,CAAb;AAAyBH,MAAAA,OAAO,CAACC,GAAR,CAAa,MAAKL,KAAK,CAACF,IAAK,UAA7B;AAAyC;AAClH,GALyB,EAKtBG,KAAK,CAACL,KAAN,GAAY,IALU,CAA1B;AAMA,CAdD;;AAgBAY,MAAM,CAACC,OAAP,GAAiB;AAACZ,EAAAA,SAAD;AAAYE,EAAAA;AAAZ,CAAjB;AAEA","sourcesContent":["/*\n\tthe purpose of this module will be to: \n\tTODO - handle the character creation process\n*/\n\n'use strict';\n\n\nclass Stats {\n\tconstructor(obj){\n\t\tthis.health = obj.health; \n\t\tthis.damage = obj.damage; this.speed = obj.speed;\n\t\t// this.strength = obj.strength; this.agility = obj.agility; this.stamina = obj.stamina;\n\t\t// this.intellect = obj.intellect; this.spirit = obj.spirit; this.armor = obj.armor; \n\t\t// this.defense = obj.defense; this.dodge = obj.dodge; this.parry = obj.parry; \n\t\t// this.block = obj.block; this.resilience = obj.resilience; this.bonus_damage = bonus_damage;\n\t\t// this.bonus_health = bonus_health; this.hit_rating = hit_rating; this.crit_chance = obj.crit_chance;\n\t\t// this.haste_rating = obj.haste_rating; this.mana_regen = obj.mana_regen; this.power = obj.power;\n\n\t}\n}\nclass Character extends Stats {\n\tconstructor(obj){\n\t\tsuper(obj);\n\t\tthis.name = obj.name;\n\t}\n}\n\nlet duel = function(char1, char2) {\n\t// let timer = setInterval(,);\n\tlet char1att = setInterval(\n\t\tfunction(){\n\t\t\tconsole.log(`${char1.name} *attacks*: ${char2.name} has ${char2.health} left!`);\n\t\t\tchar2.health -= char1.damage;\n\t\t\tif(char2.health <= 0){clearInterval(char1att);clearInterval(char2att); console.log(`** ${char2.name} died **`);}\n\t}, (char1.speed*1000));\n\tlet char2att = setInterval(\n\t\tfunction(){\n\t\t\tconsole.log(`${char2.name} *attacks*: ${char1.name} has ${char1.health} left!`);\n\t\t\tchar1.health -= char2.damage;\n\t\t\tif(char1.health <= 0){clearInterval(char1att); clearInterval(char2att); console.log(`** ${char1.name} died **`);}\n\t}, (char2.speed*1000));\n};\n\nmodule.exports = {Character, duel};\n\n/*\n\tlet stats = {\n\t\tthis.strength:obj.strength\n\t\t,this.agility:obj.agility, this.stamina:obj.stamina\n\t\t,this.intellect:obj.intellect, this.spirit:obj.spirit, this.armor:obj.armor\n\t\t,this.defense:obj.defense, this.dodge:obj.dodge, this.parry:obj.parry\n\t\t,this.block:obj.block, this.resilience:obj.resilience, this.bonus_damage:obj.bonus_damage\n\t\t,this.bonus_health:obj.bonus_health, this.hit_rating:obj.hit_rating, this.crit_chance:obj.crit_chance\n\t\t,this.haste_rating:obj.haste_rating, this.mana_regen:obj.mana_regen, this.power:obj.power\n\t}\n*/"]},"metadata":{},"sourceType":"module"}